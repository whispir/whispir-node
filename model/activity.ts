/**
 * Whispir Platform API
 * Whispir Platform API for cross channel and multi channel communications. Documentation on each endpoint is available at https://developers.whispir.com.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@whispir.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { LinkInner } from './linkInner';

/**
* Activities are all the individual changes, tasks, calls, messages and so on performed in a given company workspace.
*/
export class Activity {
    /**
    *  The username of the person who performed this activity. This will usually be the API user invoking the creation.
    */
    'user'?: string;
    /**
    * The date and time of the activity in the format:dd/mm/yy hh:mm. This will be defaulted to the time at which this activity is created.
    */
    'time'?: string;
    /**
    * Specifies the action performed during this activity.
    */
    'action'?: Activity.ActionEnum;
    /**
    * The description of the activity. This is a free text that details about the activity.
    */
    'description'?: string;
    /**
    * Specifies the status of the activity.
    */
    'status'?: string;
    /**
    * Specifies the module to which this activity belongs to.
    */
    'module'?: Activity.ModuleEnum;
    /**
    * The workspace in which this activity is performed. This will usually be the API userâ€™s default workspace
    */
    'workspaceName'?: string;
    /**
    * Fullname of the user
    */
    'fullname'?: string;
    /**
    * A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object, describing all discoverable resources in relation to the original request.
    */
    'link'?: Array<LinkInner>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "user",
            "baseName": "user",
            "type": "string"
        },
        {
            "name": "time",
            "baseName": "time",
            "type": "string"
        },
        {
            "name": "action",
            "baseName": "action",
            "type": "Activity.ActionEnum"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string"
        },
        {
            "name": "module",
            "baseName": "module",
            "type": "Activity.ModuleEnum"
        },
        {
            "name": "workspaceName",
            "baseName": "workspaceName",
            "type": "string"
        },
        {
            "name": "fullname",
            "baseName": "fullname",
            "type": "string"
        },
        {
            "name": "link",
            "baseName": "link",
            "type": "Array<LinkInner>"
        }    ];

    static getAttributeTypeMap() {
        return Activity.attributeTypeMap;
    }
}

export namespace Activity {
    export enum ActionEnum {
        Create = <any> 'Create',
        Update = <any> 'Update',
        Move = <any> 'Move',
        Copy = <any> 'Copy',
        Draft = <any> 'Draft',
        Send = <any> 'Send',
        Modified = <any> 'Modified',
        Delete = <any> 'Delete',
        ContactImportFile = <any> 'Contact Import File',
        Login = <any> 'Login',
        Approve = <any> 'Approve',
        Reject = <any> 'Reject',
        Dispatch = <any> 'Dispatch',
        Register = <any> 'Register',
        Accept = <any> 'Accept',
        Closed = <any> 'Closed',
        Map = <any> 'Map',
        UnMap = <any> 'Un-map',
        Logout = <any> 'Logout'
    }
    export enum ModuleEnum {
        System = <any> 'System',
        Message = <any> 'Message',
        ScheduledMessage = <any> 'Scheduled Message',
        User = <any> 'User',
        Contact = <any> 'Contact',
        DistributionList = <any> 'Distribution List',
        Template = <any> 'Template',
        Workspace = <any> 'Workspace',
        Event = <any> 'Event',
        WebService = <any> 'WebService',
        Settings = <any> 'Settings',
        Conversation = <any> 'Conversation',
        Gateway = <any> 'Gateway',
        WorkspaceMapping = <any> 'Workspace Mapping',
        Folders = <any> 'Folders',
        Team = <any> 'Team',
        Rss = <any> 'RSS',
        ApiMapping = <any> 'API Mapping',
        Asset = <any> 'Asset',
        Instruction = <any> 'Instruction'
    }
}
