/**
 * Whispir Platform API
 * Whispir Platform API for cross channel and multi channel communications. Documentation on each endpoint is available at https://developers.whispir.com.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@whispir.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class MessageStatusMessageStatusesInnerStatusInner {
    /**
    * The message delivery channel.
    */
    'type': MessageStatusMessageStatusesInnerStatusInner.TypeEnum;
    /**
    * The message delivery status code.
    */
    'status': MessageStatusMessageStatusesInnerStatusInner.StatusEnum;
    /**
    * The delivery address of the message recipient.
    */
    'destination': string;
    /**
    * The time the message was sent from Whispir servers.
    */
    'sentTimestamp'?: number;
    /**
    * The time the message was received on the message recipient\'s device.
    */
    'receivedTimestamp'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "MessageStatusMessageStatusesInnerStatusInner.TypeEnum"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "MessageStatusMessageStatusesInnerStatusInner.StatusEnum"
        },
        {
            "name": "destination",
            "baseName": "destination",
            "type": "string"
        },
        {
            "name": "sentTimestamp",
            "baseName": "sentTimestamp",
            "type": "number"
        },
        {
            "name": "receivedTimestamp",
            "baseName": "receivedTimestamp",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return MessageStatusMessageStatusesInnerStatusInner.attributeTypeMap;
    }
}

export namespace MessageStatusMessageStatusesInnerStatusInner {
    export enum TypeEnum {
        Sms = <any> 'sms',
        Email = <any> 'email',
        Voice = <any> 'voice'
    }
    export enum StatusEnum {
        Empty = <any> '',
        Pending = <any> 'PENDING',
        Sent = <any> 'SENT',
        Delivrd = <any> 'DELIVRD',
        Read = <any> 'READ',
        Failed = <any> 'FAILED'
    }
}
